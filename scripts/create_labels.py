#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ç–æ–∫ –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
"""

import os
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
GITHUB_REPO = os.getenv('GITHUB_REPO')

def create_label(name, color, description):
    """–°–æ–∑–¥–∞—Ç—å –º–µ—Ç–∫—É –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"""
    headers = {
        'Authorization': f'token {GITHUB_TOKEN}',
        'Accept': 'application/vnd.github.v3+json'
    }
    
    data = {
        'name': name,
        'color': color,
        'description': description
    }
    
    url = f'https://api.github.com/repos/{GITHUB_REPO}/labels'
    
    response = requests.post(url, headers=headers, json=data)
    
    if response.status_code == 201:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–µ—Ç–∫–∞: {name}")
        return True
    elif response.status_code == 422:
        print(f"‚ö†Ô∏è –ú–µ—Ç–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {name}")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Ç–∫–∏ {name}: {response.status_code}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if not GITHUB_TOKEN or not GITHUB_REPO:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    # –°–ø–∏—Å–æ–∫ –º–µ—Ç–æ–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    labels = [
        {
            'name': 'training-log',
            'color': '0e8a16',
            'description': '–ó–∞–ø–∏—Å–∏ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö'
        },
        {
            'name': 'crossfit',
            'color': '1d76db',
            'description': '–ö—Ä–æ—Å—Å—Ñ–∏—Ç —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'
        },
        {
            'name': 'wod',
            'color': 'fbca04',
            'description': 'Workout of the Day'
        },
        {
            'name': 'strength',
            'color': 'd93f0b',
            'description': '–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'
        },
        {
            'name': 'cardio',
            'color': '84b6eb',
            'description': '–ö–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'
        },
        {
            'name': 'mixed',
            'color': '5319e7',
            'description': '–°–º–µ—à–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏'
        },
        {
            'name': 'pr',
            'color': 'fef2c0',
            'description': '–õ–∏—á–Ω—ã–µ —Ä–µ–∫–æ—Ä–¥—ã'
        },
        {
            'name': 'progress',
            'color': 'c2e0c6',
            'description': '–ü—Ä–æ–≥—Ä–µ—Å—Å –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö'
        }
    ]
    
    print(f"üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç–æ–∫ –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {GITHUB_REPO}")
    print("=" * 50)
    
    success_count = 0
    for label in labels:
        if create_label(label['name'], label['color'], label['description']):
            success_count += 1
    
    print("=" * 50)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –º–µ—Ç–æ–∫: {success_count}/{len(labels)}")

if __name__ == '__main__':
    main()
